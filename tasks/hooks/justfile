set fallback := true
set shell := ["bash", "-uc"]
set ignore-comments

[no-cd]
@help:
  just -f tasks/hooks/justfile --list

[no-cd]
@_default: help

[no-cd]
@commit-msg message:
  pnpm exec commitlint --edit {{message}}

[no-cd]
@pre-commit:
  just bootstrap build-all
  pnpm exec lint-staged

[no-cd]
@lint-staged *files:
  just hooks lint-files {{files}}

[no-cd]
lint-tracked:
  #!/usr/bin/env bash
  git ls-files -z | xargs -0 just hooks lint-files

[no-cd]
@lint-files *files:
  just hooks _shellcheck {{files}}
  just hooks _ensure-newlines {{files}}

[no-cd]
_shellcheck *files:
  #!/usr/bin/env bash
  shfiles=()
  # Built bootstrap scripts are excluded - we lint source files in bootstrap/lib/
  exclude_patterns=("bootstrap/configure.sh" "bootstrap/termux.sh" "bootstrap/vmroot.sh" "bootstrap/vmroot-configure.sh")
  for file in {{files}}; do
    if [[ "$file" == *.sh ]]; then
      excluded=false
      for pattern in "${exclude_patterns[@]}"; do
        if [[ "$file" == "$pattern" ]]; then
          excluded=true
          break
        fi
      done
      if [[ "$excluded" == false ]]; then
        shfiles+=("$file")
      fi
    fi
  done
  if [ ${#shfiles[@]} -gt 0 ]; then
    shellcheck "${shfiles[@]}"
  fi

[no-cd]
_ensure-newlines *files:
  #!/usr/bin/env bash
  blocklist=("png" "jpg" "jpeg" "gif" "ico" "svg" "woff" "woff2" "ttf" "eot" "mp4" "mp3" "wav" "pdf" "zip" "tar" "gz")
  for file in {{files}}; do
    if [[ -f "$file" ]]; then
      ext="${file##*.}"
      ext="${ext,,}"
      blocked=false
      for blocked_ext in "${blocklist[@]}"; do
        if [[ "$ext" == "$blocked_ext" ]]; then
          blocked=true
          break
        fi
      done
      if [[ "$blocked" == false ]] && [[ -n "$(tail -c1 "$file" 2>/dev/null)" ]]; then
        echo "" >> "$file"
      fi
    fi
  done
